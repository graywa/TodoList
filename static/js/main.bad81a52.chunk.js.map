{"version":3,"sources":["Context.js","Todo/TodoItem.js","Todo/TodoList.js","Loader.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","border","borderRadius","padding","margin","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","checked","type","id","title","onClick","ul","listStyle","width","TodoList","props","todos","map","toggleChange","Loader","Modal","state","isOpen","Fragment","setState","this","Component","AddTodo","lazy","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","setTimeout","window","store","Provider","value","filter","Suspense","fallback","onCreate","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bad81a52.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React, {useContext} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from \"../Context\"\r\n\r\n\r\nconst styles = {\r\n  li: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    border: '1px solid #999',\r\n    borderRadius: '0.5rem',\r\n    padding: '0.5rem',\r\n    margin: '0.5rem'\r\n  },\r\n  input: {\r\n    marginRight: '1rem'\r\n  }\r\n}\r\n\r\nfunction TodoItem({todo, index, onChange}) {\r\n\r\n  const {removeTodo} = useContext(Context)\r\n\r\n  const classes = []\r\n\r\n  if (todo.completed) {\r\n    classes.push('done')\r\n  }\r\n\r\n  return (\r\n      <li style={styles.li}>\r\n        <span className={classes.join('')}>\r\n          <input\r\n              checked={todo.completed}\r\n              type=\"checkbox\"\r\n              style={styles.input}\r\n              onChange={() => onChange(todo.id)}/>\r\n          <strong>{++index}</strong>\r\n          {' '}\r\n          {todo.title}\r\n        </span>\r\n        <button className='rm' onClick={() => removeTodo(todo.id)}>&times;</button>\r\n      </li>\r\n  )\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  index: PropTypes.number,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodoItem from \"./TodoItem\";\r\n\r\n\r\nconst styles = {\r\n  ul: {\r\n    listStyle: 'none',\r\n    margin: '25px auto',\r\n    padding: 0,\r\n    width: '400px'\r\n  }\r\n}\r\n\r\nfunction TodoList(props) {\r\n\r\n  return (\r\n      <ul style={styles.ul}>\r\n        {props.todos.map((todo, index) => {\r\n          return <TodoItem\r\n              todo={todo}\r\n              index={index}\r\n              key={todo.id}\r\n              onChange={props.toggleChange}\r\n          />\r\n        })}\r\n        {}\r\n      </ul>\r\n  )\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  toggleChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TodoList","import React from 'react'\r\n\r\nconst Loader = () => {\r\n  return <div style={{display: 'flex', justifyContent: 'center' }}>\r\n    <div className=\"lds-ellipsis\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div></div>\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport './Modal.css'\r\n\r\n\r\nexport default class Modal extends React.Component {\r\n\r\n  state = {\r\n    isOpen: false\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <button onClick={() => this.setState({isOpen: true})}>Open modal</button>\r\n          {\r\n            this.state.isOpen && <div className='modal'>\r\n              <div className='modal__body'>\r\n                <h1>Modal title</h1>\r\n                <p>The first modal window</p>\r\n                <button onClick={() => this.setState({isOpen: false})}>Close modal</button>\r\n              </div>\r\n            </div>\r\n          }\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}","import './App.css'\nimport React, {useEffect} from 'react'\nimport TodoList from \"./Todo/TodoList\"\nimport Context from \"./Context\"\nimport Loader from \"./Loader\"\nimport Modal from \"./Modal/Modal\"\nconst AddTodo = React.lazy(() => import(\"./AddTodo\"))\n\n\nfunction App() {\n\n  const [todos, setTodos] = React.useState([])\n  const [loading, setLoading] = React.useState(true)\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n        .then(response => response.json())\n        .then(todos => setTimeout(() => {\n              setTodos(todos)\n              setLoading(false)\n            },2000 ))\n  },[])\n\n  window.store = todos\n\n  let toggleChange = (id) => {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed\n      }\n      return todo\n    }))\n  }\n\n  function onCreate(title) {\n    setTodos(todos.concat([{\n      id: Date.now(),\n      completed: false,\n      title,\n    }]))\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  return (\n      <Context.Provider value={{removeTodo}}>\n        <div className='wrapper'>\n          <h1>Todo List</h1>\n          <Modal />\n          <React.Suspense fallback={<div>...loading</div>}>\n            <AddTodo onCreate={onCreate} />\n          </React.Suspense>\n          {loading && <Loader />}\n          { (todos.length)\n              ? <TodoList todos={todos} toggleChange={toggleChange}/>\n              : (loading ? null : <p>No todos</p>) }\n        </div>\n      </Context.Provider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}